<%
        # Construct the main text of the mail
        main_text = ''
        for track_thing, alert_results in @email_about_things
            main_text += track_thing.params[:title_in_email] + "\n"
            main_text += ("=" * track_thing.params[:title_in_email].size) + "\n\n"
            for result in alert_results.reverse
                if result.class.to_s == "InfoRequestEvent"
                    event = result

                    if not @highlighting.nil? and @highlighting['InfoRequestEvent'][event.id].size > 0
                        extract = @highlighting['InfoRequestEvent'][event.id].values.join(" ")
                    elsif not event.outgoing_message.nil?
                        extract = excerpt(event.outgoing_message.body_without_salutation, "", 150)
                    elsif not event.incoming_message.nil?
                        extract = excerpt(event.incoming_message.get_body_for_quoting, "", 150)
                    else
                        extract = excerpt(info_request.initial_request_text, "", 150)
                    end
                    extract.gsub!(/\s+/, ' ')

                    if event.event_type == 'response'
                        url = incoming_message_url(event.incoming_message)
                        main_text += event.info_request.public_body.name + " sent a response to " + event.info_request.user.name 
                    elsif event.event_type == 'followup_sent'
                        url = outgoing_message_url(event.outgoing_message)
                        main_text += event.info_request.user.name + " sent a follow up message to " + event.info_request.public_body.name 
                    elsif event.event_type == 'sent'
                        # this is unlikely to happen in real life, but happens in the test code
                        url = main_url(request_url(event.info_request))+"#outgoing-"+event.outgoing_message.id.to_s
                        main_text += event.info_request.user.name + " sent a request to " + event.info_request.public_body.name 
                    else
                        raise "unknown type in event_digest " + event.event_type
                    end
                    main_text += " (" + simple_date(event.created_at) + ")\n"
                    main_text += MySociety::Format.wrap_email_body('"' + extract + '"').gsub(/\n+$/, "") + "\n"
                    main_text += url + "\n"

                    main_text += "\n"
                else
                    raise "need to add other types to TrackMailer.event_digest"
                end
            end
            main_text += "\n"
        end

        #STDERR.puts main_text
        #STDERR.puts @unsubscribe_url
%><%=main_text%>Alter your subscription
=======================

Please click on the link below to cancel or alter these emails.
<%=@unsubscribe_url%>

-- the WhatDoTheyKnow team


