<%  
@last_email = nil
if !info_request_event.nil? && info_request_event.event_type == 'response'
    incoming_message = info_request_event.incoming_message
end
    
if not incoming_message.nil?
%>
    <div class="correspondence" id="incoming-<%=incoming_message.id.to_s%>">
        <h2><%= simple_date(incoming_message.sent_at) %></h2>

        <%= render :partial => 'bubble', :locals => { :incoming_message => incoming_message, :body => incoming_message.get_body_for_html_display(@collapse_quotes), :attachments => incoming_message.get_attachments_for_display }  %>

        <p class="event_bubble">
            <% if !incoming_message.safe_mail_from.nil? %>
                <%= incoming_message.safe_mail_from %> of
            <% end %>
            <%= public_body_link(@info_request.public_body) %> replied 
            (<%= link_to "link to this", show_response_url(:id => incoming_message.info_request.id, :incoming_message_id => incoming_message.id) %>,
            <%= link_to "reply", show_response_url(:id => incoming_message.info_request.id, :incoming_message_id => incoming_message.id) + "#show_response_followup" %>)
        </p>
    </div>
<%
elsif info_request_event.event_type == 'sent' || info_request_event.event_type == 'followup_sent'
    outgoing_message = info_request_event.outgoing_message
    %>
    <div class="correspondence" id="outgoing-<%=outgoing_message.id.to_s%>">
        <h2><%= simple_date(info_request_event.created_at) %></h2>

        <%= render :partial => 'bubble', :locals => { :body => outgoing_message.get_body_for_html_display(), :attachments => nil }  %>

        <p class="event_bubble"> 
            <%= user_link(@info_request.user) %>
            <% if outgoing_message.message_type == 'initial_request' %>
                <% if outgoing_message.status == 'sent' %>
                    sent the initial request
                    to <%= public_body_link(@info_request.public_body) %>
                <% elsif outgoing_message.status == 'ready' %>
                     wrote the initial request, but it has <strong>not yet been sent</strong>
                <% else raise "unknown outgoing_message.status" %>
                <% end %> 
            <% elsif outgoing_message.message_type == 'followup' %>
                <% if outgoing_message.status == 'sent' %>
                    wrote to
                    <% if !outgoing_message.incoming_message_followup.nil? && !outgoing_message.incoming_message_followup.safe_mail_from.nil? %>
                        <%= outgoing_message.incoming_message_followup.safe_mail_from %> of
                    <% end %>
                    <%= public_body_link(@info_request.public_body) %>
                <% elsif outgoing_message.status == 'ready' %>
                     wrote a follow up message, but it has <strong>not yet been sent</strong>
                <% else raise "unknown outgoing_message.status" %>
                <% end %> 
            <% else raise "unknown outgoing_message.message_type" %>
            <% end %>
            (<%= link_to "send follow up", show_response_no_followup_url(:id => outgoing_message.info_request.id, :incoming_message_id => nil) + "#show_response_followup" %>)
        </p>
    </div>
<% elsif info_request_event.event_type == 'resent' %>
    <div class="correspondence">
        <p class="event_plain"> 
            Sent to <%= public_body_link(@info_request.public_body) %>
            again (perhaps to a new contact address) <!-- XXX actually say if it is a new one or not -->
        </p>
    </div>
<% 
end 

if !info_request_event.nil? 
    if ['sent', 'resent'].include?(info_request_event.event_type)
         @last_email = info_request_event.params[:email]
    end
end
%>
